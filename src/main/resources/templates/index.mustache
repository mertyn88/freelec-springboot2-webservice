
<!--
    \{\{#userName\}\}
        머스테치는 다른 언어와 같은 if문을 제공하지 않는다.
        true/false 여부만 판단
        머스테치에서는 항상 최종값을 넘겨줘야한다. ( 처리를 아마 java단에서 하고 결과만 return이란 이야기인듯하다)

     a href=/logout
        스크링 시큐리티에서 기본적으로 제공하는 로그아웃 url이다.
        개발자가 별도로 url에 해당하는 컨트롤러를 만들 필요가 없다.
        SecurityConfig 클래스에서 URL을 변경할 수 있지만 기본 URL을 사용해도 충분

     \{\{^userName\}\}
        머스테치에서 해당 값이 존재하지 않는 경우에는 ^사용 ( null이거나 empty일경우인가..?)_
        여기서는 userName의 값이 없다면 로그인 버튼을 노출

     a href=/oauth2/authorization/google
        스크링 시큐리티에서 기본적으로 제공하는 로그인 url이다.
        로그아웃 URL과 마찬가지로 개발자가 별도의 컨트롤러를 생성할 필요가 없다.
-->
{{>layout/header}}  <!-- 현재 머스테치 파일을 기준으로 다른파일을 가져온다 ( = import) -->
        <h1>SpringBoot,OAuth2,AWS,RDS사용 게시판</h1>
        <div class="col-md-12">
            <!-- 로그인 기능 영역 -->
            <div class="row">
                <div class="col-md-6">
                    <a href="/posts/save" role="button" class="btn btn-primary">글등록</a>
                    <!-- userName Loop -->
                    {{#userName}}
                        Logged in as : <span id="user">{{userName}}</span><a href="/logout" class="btn btn-info active" role="button">Logout</a>
                    {{/userName}}
                    {{^userName}}
                        <a href="/oauth2/authorization/google" class="btn btn-success active" role="button">Google Login</a>
                        <!--
                            네이버 로그인 URL은 application-oauth.properties에 등록한 redirect_uri_template값에 맞춰 자동으로 등록한다.
                            /oauth2/authorization/ 까지는고정이고 마지막 Path만 각 소셜 로그인 코드를 사용하면 된다.
                            여기서는 Naver가 마지막 Path가된다.
                        -->
                        <a href="/oauth2/authorization/naver" class="btn btn-secondary active" role="button">Naver Login</a>
                    {{/userName}}
                </div>
            </div>

        <!-- 목록 출력 영역 -->
        <br>
        <table class="table table-horizontal table-bordered">
            <thead class="thead-strong">
                <tr>
                    <th>게시글번호</th>
                    <th>제목</th>
                    <th>내용</th>
                    <th>작성자</th>
                    <th>최종수정일</th>
                </tr>
            </thead>
            <tbody id="tbody">
                <!-- -->
                <!--
                    mustache 문법
                    \{\{#posts\}\}
                        posts라는 List를 순회한다.
                    Java의 for문
                    \{\{id\}\}등의 변수명
                        List에서 뽑아낸 객체의 필드를 사용한다
                -->
                <!-- posts에 대한 루프 시작 -->
                {{#posts}}
                    <tr>
                        <td>{{id}}</td>
                        <td><a href="/posts/update/{{id}}">{{title}}</a></td>
                        <td>{{content}}</td>
                        <td>{{author}}</td>
                        <td>{{modifiedDate}}</td>
                    </tr>
                {{/posts}}
                <!-- posts에 대한 루프 종료 -->
            </tbody>
        </table>
    </div>
{{>layout/footer}}
