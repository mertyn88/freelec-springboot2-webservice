#스프링 부트에서는 properties의 이름을  application-xxx.properties로 만들면 xxx라는 profile이 생성되어
#관리를 할 수 있다.
#즉 해당 부분은 oauth라는 profiles가 만들어 졌고 해당부분을 포함하여 사용하겠다 라는 의미 이다.
spring.profiles.include=oauth

#JPA가 실행되는 SQL로그를 보는 옵션
spring.jpa.show_sql=true

#출력되는 JPA쿼리를 MySQL버전으로 변경
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect

# 웹콘솔 옵션 활성화 ( 조회기능을 톰캣으로 보기위해)
spring.h2.console.enabled=true

# 세션 저장소를 jdbc로 선택
# 해당 옵션을 사용하면 세션을 위한 테이블 2개 (SPRING_SESSION, SPRING_SESSION_ATTRIBUTES)가 추가 생성이 된다.
# JPA로 인해 세션 테이블이 자동 생성되었다.
# 현재는 스프링을 재시작하면 H2 기반이기 때문에 세션이 풀리게 되어있다.
# 하지만 이후 AWS로 배포하게 되면 AWS의 DB인 RDS(Relational Database Service)를 사용하게 되니 세션이 풀리지 않는다.
spring.session.store-type=jdbc